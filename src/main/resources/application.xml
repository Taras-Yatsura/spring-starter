<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
       xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
       xmlns:context="http://www.springframework.org/schema/context"
       xsi:schemaLocation="http://www.springframework.org/schema/beans
        http://www.springframework.org/schema/beans/spring-beans.xsd
        http://www.springframework.org/schema/context
        https://www.springframework.org/schema/context/spring-context.xsd"
>

    <!--New implementation of using properties files-->
    <context:property-placeholder location="classpath:application.properties"/>

    <!--For working with Annotation based bean configuration-->
    <!--Old implementation-->
    <!--<bean class="org.springframework.context.annotation.CommonAnnotationBeanPostProcessor"/>-->
    <!--New implementation. Add beans:
    -   CommonAnnotationBeanPostProcessor (@PostConstruct, @PreDestroy, @Resource)
    -   AutowiredAnnotationBeanPostProcessor (@AutoWired, @Value)
    -   EventListenerMethodProcessor (@EventListener)
    -   ConfigurationClassPostProcessor (@Configuration)
    -   PersistenceAnnotationBeanPostProcessor (@PersistenceContext - analogue EntityManagerFactory,
        @PersistenceUnit - analogue EntityManager) (added only with Spring Data)
    -->
    <context:annotation-config/>

    <!--Old implementation of using properties files-->
    <!--<bean class="org.springframework.context.support.PropertySourcesPlaceholderConfigurer">
        <property name="locations" value="classpath:application.properties"/>
    </bean>-->

    <bean class="com.tyatsura.spring.bfpp.LogBeanFactoryPostProcessor"/>
    <bean class="com.tyatsura.spring.bfpp.FirstVerifyBeanFactoryPostProcessor"/>
    <bean class="com.tyatsura.spring.bfpp.VerifyBeanFactoryPostProcessor"/>

    <!--Used for setting some constructor tht consume specific argument type (as String have StringBuffer, StringBuilder...)-->
    <bean id="driver" class="java.lang.String">
        <!--${} - expression language (JAVA EE specification)-->
        <constructor-arg type="java.lang.String" value="${db.driver}"/>
    </bean>

    <!--id index needed to specify which argument of constructor is specified (order should be same). If not specified - one by one-->
    <!--More clear -  use name of arg instead (see username and poolSize) -->
    <bean id="pool1" name="p1,p2,p3" class="com.tyatsura.spring.database.pool.ConnectionPool">
        <constructor-arg index="2" type="java.util.List">
            <list>
                <value>--arg1=value1</value>
                <value>--arg2=value2</value>
                <!--Factory method-->
                <ref bean="driver"/>
            </list>
        </constructor-arg>
        <constructor-arg name="properties" type="java.util.Map">
            <map>
                <entry key="url" value="${db.url}"/>
                <entry key="pass" value="${db.password}"/>
                <!--#{} - SpEL - spring expression language and we can use beans and all it's filed and methods -->
                <entry key="driver" value="#{driver.substring(3)}"/>
                <entry key="test" value="#{driver.length() > 10}"/>
                <entry key="utilityMethod" value="#{driver.length() > T(Math).random() * 10}"/>
                <entry key="hosts" value="#{'${db.hosts}'.split(',')}"/>
                <!--With SpEL we also can use system properties. -->
                <entry key="currentUser" value="#{systemProperties['user.name']}"/>
                <!--This will also first lookup .properties files that used by app and then check system properties-->
                <entry key="currentUserAnother" value="${user.name}"/>
            </map>
        </constructor-arg>
        <!--Using references to another bean-->
        <constructor-arg name="username" value="${db.username}" type="java.lang.String"/>
        <constructor-arg name="poolSize" value="${db.pool.size}" type="java.lang.Integer"/>
    </bean>
    <!--<bean id="pool2" name= "p4,p5" class="com.tyatsura.spring.database.pool.ConnectionPool"/>-->

    <!--Using references to another bean-->
    <bean id="companyRepository" class="com.tyatsura.spring.database.repository.CompanyRepository" factory-method="of">
        <constructor-arg ref="pool1"/>
    </bean>

    <!--Using property injection (by setter)-->
    <bean id="userRepository" class="com.tyatsura.spring.database.repository.UserRepository">
        <constructor-arg name="connectionPool">
            <!--Not good practice to use null. Only for test purposes because we haven't no arg constructor-->
            <null/>
        </constructor-arg>
        <property name="connectionPool" ref="pool1"/>
    </bean>
</beans>